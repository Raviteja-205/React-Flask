{"version":3,"sources":["logo.svg","components/cropper.js","STOCK.png","App.js","reportWebVitals.js","index.js"],"names":["cropper","state","imageDestination","imageElement","React","createRef","Cropper","this","current","zoomable","scalable","aspectRatio","crop","canvas","getCroppedCanvas","setState","toDataURL","class","ref","src","props","alt","crossorigin","Component","App","selectedFile","fileSelectedHandler","bind","event","console","log","URL","createObjectURL","target","files","type","onChange","stock","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QAAe,I,4BCyCAA,G,8DAlCX,aAAe,IAAD,8BACV,gBACKC,MAAQ,CACTC,iBAAkB,IAEtB,EAAKC,aAAeC,IAAMC,YALhB,E,gEAQO,IAAD,OACVL,EAAU,IAAIM,IAAQC,KAAKJ,aAAaK,QAAS,CACnDC,UAAU,EACVC,UAAU,EACVC,YAAa,EACbC,KAAM,WACF,IAAMC,EAASb,EAAQc,mBACvB,EAAKC,SAAS,CAAEb,iBAAkBW,EAAOG,UAAU,oB,+BAO3D,OACI,gCACI,qBAAKC,MAAM,gBAAX,SACI,qBAAKC,IAAKX,KAAKJ,aAAcgB,IAAKZ,KAAKa,MAAMD,IAAKE,IAAI,SAASC,aAAW,MAE9E,qBAAKH,IAAKZ,KAAKN,MAAMC,iBAAkBe,MAAM,cAAcI,IAAI,uB,GA7BzDjB,IAAMmB,YCLb,MAA0B,kCC+C1BC,E,kDApCb,WAAYJ,GACX,IAAD,8BAAK,cAAMA,IACJnB,MACL,CACEwB,aAAc,MAEhB,EAAKC,oBAAsB,EAAKA,oBAAoBC,KAAzB,gBAL7B,E,gEASoBC,GAClBC,QAAQC,IAAI,YACZvB,KAAKQ,SAAS,CACZU,aAAeM,IAAIC,gBAAgBJ,EAAMK,OAAOC,MAAM,Q,0CAKxDL,QAAQC,IAAI,a,+BAQd,OACE,gCACE,uBAAOK,KAAK,OAAOC,SAAU7B,KAAKmB,sBAChC,qBAAKP,IAAKZ,KAAKN,MAAMwB,eACvB,8BACM,cAAC,EAAD,CAASN,IAAKkB,a,GAhCRd,aCEHe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.eb7527d4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from \"react\";\r\nimport Cropper from \"cropperjs\";\r\nimport \"cropperjs/dist/cropper.min.css\";\r\nimport \"./imagecropper.css\";\r\n\r\nclass cropper extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            imageDestination: \"\"\r\n        };\r\n        this.imageElement = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        const cropper = new Cropper(this.imageElement.current, {\r\n            zoomable: false,\r\n            scalable: false,\r\n            aspectRatio: 1,\r\n            crop: () => {\r\n                const canvas = cropper.getCroppedCanvas();\r\n                this.setState({ imageDestination: canvas.toDataURL(\"image/png\") });\r\n            }\r\n        });\r\n    }\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div class=\"img-container\">\r\n                    <img ref={this.imageElement} src={this.props.src} alt=\"Source\" crossorigin />\r\n                </div>\r\n                <img src={this.state.imageDestination} class=\"img-preview\" alt=\"Destination\" />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default cropper;","export default __webpack_public_path__ + \"static/media/STOCK.284ccad7.png\";","\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport logo from './logo.svg';\nimport './App.css';\nimport axios from 'axios';\nimport Cropper from \"./components/cropper\";\nimport stock from '../src/STOCK.png'\n\n\nclass App extends Component{ \n  constructor(props)\n  {    super(props)    \n    this.state = \n    {      \n      selectedFile: null   \n    } \n    this.fileSelectedHandler = this.fileSelectedHandler.bind(this)\n\n  }\n\n  fileSelectedHandler(event) {\n    console.log(\"Selected\")\n    this.setState({\n      selectedFile : URL.createObjectURL(event.target.files[0])\n    })\n  }\n  \n  fileUploadHandler(){\n    console.log(\"Entered\")\n    }\n    // const fd=new FormData();\n    //fd.append('image',this.state.selectedFile)\n    //axios.post(\"http://127.0.0.1:5000/\",fd)\n\n    \nrender(){\n  return(\n    <div>\n      <input type=\"file\" onChange={this.fileSelectedHandler}/>\n      { <img src={this.state.selectedFile}></img> }\n      <div>\n            <Cropper src={stock}></Cropper>\n      </div>\n    </div>\n  )};}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}